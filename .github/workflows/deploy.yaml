---
name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build cook
    runs-on: ubuntu-latest

    env:
      LATEX_DOCKER_IMAGE_NAME: "ghcr.io/xu-cheng/texlive-full"
      LATEX_DOCKER_IMAGE_TAG: "20230801"
      LATEX_EXPECTED_CHECKSUM: "a21e25265e693dc89238d747bf15d5f575cf2ba7f9e8a33b70408d7d9e1b5c9b"

    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.x

      - name: Install dependencies
        run: |
          sudo apt install -y lftp
          python -m pip install 'pycook @ git+https://github.com/openpaul/pycook'
          pip install mkdocs 'mkdocs-material>=9.5.12' mkdocs-localsearch mkdocs-minify-plugin
          mkdir site

      - name: Convert from .cook to .tex
        run: |
          pycook -i cook/ -o latex/ -f tex

      # Here we ensure that the docker image we use in the next step wasnt altered by checking the checksum
      #- name: Pull LaTex Docker image
      #  run: docker pull ${{ env.LATEX_DOCKER_IMAGE_NAME }}:${{ env.LATEX_DOCKER_IMAGE_TAG }}

      #- name: Verify checksum
      #  run: |
      #    expected_checksum="${{ env.LATEX_EXPECTED_CHECKSUM }}"
      #    actual_checksum=$(docker inspect --format='{{.RepoDigests}}' ${{ env.LATEX_DOCKER_IMAGE_NAME }}:${{ env.LATEX_DOCKER_IMAGE_TAG }} | sha256sum | awk '{print $1}')
      #    
      #    if [ "$expected_checksum" != "$actual_checksum" ]; then
      #      echo "Error: Docker image checksum mismatch."
      #      exit 1
      #    fi

      
      - name: Convert from .cook to markdown
        run: |
          # first ensure we have all webp images, ideally this runs locally but best to have it here too
          bash .github/images_ci.sh cook .github/rescale.sh
          # now convert to md and include all webp images where needed
          pycook -i cook/ -o docs/

          # sync all remaining images, for steps etc
          rsync -av --ignore-existing --include "*/" --include="*.webp"  --exclude="*" cook/ docs/
      
      - name: Make gallery
        run: |
          # use script to make first page
          python .github/gallery.py docs abc >> docs/index.md

      - name: Build Webpage with mkdocs
        run : |
          mkdocs build -c
      
      #- name: Compile latex to .pdf
      #  uses: xu-cheng/latex-action@v3
      #  with:
      #    root_file: latex/recipes.tex
      #    latexmk_use_xelatex: true
      #    docker_image: ${{ env.LATEX_DOCKER_IMAGE_NAME }}:${{ env.LATEX_DOCKER_IMAGE_TAG }} # pinned version to avoid issues, can be updated
      #    post_compile: "mv recipes.pdf site/recipes.pdf"

      - name: Upload
        env:
          SERVER: ${{ secrets.SERVER }}
          SSHKEY: ${{ secrets.SSHKEY }}
          SSHUSER: ${{ secrets.SSHUSER }}
          SSHPORT: ${{ secrets.PORT }}
        run: |
          IPADDR=$(nslookup -q=A ${SERVER} 9.9.9.9 | grep -Eo 'Address: [^ ]+$' | tail -1 | awk '{print $2}') 
          echo $IPADDR
          IPADDR="83.83.180.46"
          
          echo "${SSHKEY}" > .key; 
          chmod 600 .key;
          ls ;
          scp -vv -i .key -o StrictHostKeyChecking=no -P ${SSHPORT} -r site ${SSHUSER}@${IPADDR}:/home/githubci/webspace/recipes/
          rm .key

      #- name: Upload to Webspace
      #  env:
      #    FTP_USER: ${{ secrets.FTPUSER }}
      #    FTP_PASSWORD: ${{ secrets.FTPPASSWORD }}
      #    SERVER: ${{ secrets.SERVER }}
      #  run: |
      #    chmod +x  .github/lftp.sh
      #    lftp --version
      #    bash .github/lftp.sh site ${FTP_USER} ${FTP_PASSWORD} ${SERVER} /